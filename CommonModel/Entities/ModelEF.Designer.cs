//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("UsbCdcDbModel", "FK_CmdArchetype_Device", "Device", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CommonModel.Entities.Device), "CmdArchetype", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CommonModel.Entities.CmdArchetype), true)]
[assembly: EdmRelationshipAttribute("UsbCdcDbModel", "FK_Command_CmdArchetype", "CmdArchetype", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CommonModel.Entities.CmdArchetype), "Command", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CommonModel.Entities.Command), true)]
[assembly: EdmRelationshipAttribute("UsbCdcDbModel", "FK_CmdList_ConfDevice", "ConfDevice", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CommonModel.Entities.ConfDevice), "CmdList", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CommonModel.Entities.CmdList), true)]
[assembly: EdmRelationshipAttribute("UsbCdcDbModel", "FK_Command_CmdList", "CmdList", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CommonModel.Entities.CmdList), "Command", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CommonModel.Entities.Command), true)]
[assembly: EdmRelationshipAttribute("UsbCdcDbModel", "FK_Command_Unit", "Unit", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CommonModel.Entities.Unit), "Command", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CommonModel.Entities.Command), true)]
[assembly: EdmRelationshipAttribute("UsbCdcDbModel", "FK_MeasureValue_Command", "Command", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CommonModel.Entities.Command), "MeasureValue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CommonModel.Entities.MeasureValue), true)]
[assembly: EdmRelationshipAttribute("UsbCdcDbModel", "FK_ConfDevice_Device", "Device", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CommonModel.Entities.Device), "ConfDevice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CommonModel.Entities.ConfDevice), true)]
[assembly: EdmRelationshipAttribute("UsbCdcDbModel", "FK_MeasureSession_ConfDevice", "ConfDevice", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CommonModel.Entities.ConfDevice), "MeasureSession", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CommonModel.Entities.MeasureSession), true)]
[assembly: EdmRelationshipAttribute("UsbCdcDbModel", "FK_StationDeviceM2M_Device", "Device", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CommonModel.Entities.Device), "StationDeviceM2M", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CommonModel.Entities.StationDeviceM2M), true)]
[assembly: EdmRelationshipAttribute("UsbCdcDbModel", "FK_MeasureCycle_MeasureSession", "MeasureSession", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CommonModel.Entities.MeasureSession), "MeasureCycle", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CommonModel.Entities.MeasureCycle), true)]
[assembly: EdmRelationshipAttribute("UsbCdcDbModel", "FK_Measurement_MeasureCycle", "MeasureCycle", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CommonModel.Entities.MeasureCycle), "Measurement", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CommonModel.Entities.Measurement), true)]
[assembly: EdmRelationshipAttribute("UsbCdcDbModel", "FK_MeasureValue_Measurement", "Measurement", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CommonModel.Entities.Measurement), "MeasureValue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CommonModel.Entities.MeasureValue), true)]
[assembly: EdmRelationshipAttribute("UsbCdcDbModel", "FK_MeasureSession_MeasureStation", "MeasureStation", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CommonModel.Entities.MeasureStation), "MeasureSession", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CommonModel.Entities.MeasureSession), true)]
[assembly: EdmRelationshipAttribute("UsbCdcDbModel", "FK_MeasureSession_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(CommonModel.Entities.User), "MeasureSession", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CommonModel.Entities.MeasureSession), true)]
[assembly: EdmRelationshipAttribute("UsbCdcDbModel", "FK_StationDeviceM2M_MeasureStation", "MeasureStation", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CommonModel.Entities.MeasureStation), "StationDeviceM2M", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CommonModel.Entities.StationDeviceM2M), true)]
[assembly: EdmRelationshipAttribute("UsbCdcDbModel", "FK_UserStationM2M_MeasureStation", "MeasureStation", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CommonModel.Entities.MeasureStation), "UserStationM2M", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CommonModel.Entities.UserStationM2M), true)]
[assembly: EdmRelationshipAttribute("UsbCdcDbModel", "FK_UserRight_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CommonModel.Entities.User), "UserRight", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CommonModel.Entities.UserRight), true)]
[assembly: EdmRelationshipAttribute("UsbCdcDbModel", "FK_UserStationM2M_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CommonModel.Entities.User), "UserStationM2M", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CommonModel.Entities.UserStationM2M), true)]
[assembly: EdmRelationshipAttribute("UsbCdcDbModel", "FK_UserRight_Right", "Right", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(CommonModel.Entities.Right), "UserRight", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(CommonModel.Entities.UserRight), true)]

#endregion

namespace CommonModel.Entities
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class UsbCdcDbEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new UsbCdcDbEntities object using the connection string found in the 'UsbCdcDbEntities' section of the application configuration file.
        /// </summary>
        public UsbCdcDbEntities() : base("name=UsbCdcDbEntities", "UsbCdcDbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new UsbCdcDbEntities object.
        /// </summary>
        public UsbCdcDbEntities(string connectionString) : base(connectionString, "UsbCdcDbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new UsbCdcDbEntities object.
        /// </summary>
        public UsbCdcDbEntities(EntityConnection connection) : base(connection, "UsbCdcDbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CmdArchetype> CmdArchetype
        {
            get
            {
                if ((_CmdArchetype == null))
                {
                    _CmdArchetype = base.CreateObjectSet<CmdArchetype>("CmdArchetype");
                }
                return _CmdArchetype;
            }
        }
        private ObjectSet<CmdArchetype> _CmdArchetype;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CmdList> CmdList
        {
            get
            {
                if ((_CmdList == null))
                {
                    _CmdList = base.CreateObjectSet<CmdList>("CmdList");
                }
                return _CmdList;
            }
        }
        private ObjectSet<CmdList> _CmdList;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Command> Command
        {
            get
            {
                if ((_Command == null))
                {
                    _Command = base.CreateObjectSet<Command>("Command");
                }
                return _Command;
            }
        }
        private ObjectSet<Command> _Command;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ConfDevice> ConfDevice
        {
            get
            {
                if ((_ConfDevice == null))
                {
                    _ConfDevice = base.CreateObjectSet<ConfDevice>("ConfDevice");
                }
                return _ConfDevice;
            }
        }
        private ObjectSet<ConfDevice> _ConfDevice;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Device> Device
        {
            get
            {
                if ((_Device == null))
                {
                    _Device = base.CreateObjectSet<Device>("Device");
                }
                return _Device;
            }
        }
        private ObjectSet<Device> _Device;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MeasureCycle> MeasureCycle
        {
            get
            {
                if ((_MeasureCycle == null))
                {
                    _MeasureCycle = base.CreateObjectSet<MeasureCycle>("MeasureCycle");
                }
                return _MeasureCycle;
            }
        }
        private ObjectSet<MeasureCycle> _MeasureCycle;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Measurement> Measurement
        {
            get
            {
                if ((_Measurement == null))
                {
                    _Measurement = base.CreateObjectSet<Measurement>("Measurement");
                }
                return _Measurement;
            }
        }
        private ObjectSet<Measurement> _Measurement;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MeasureSession> MeasureSession
        {
            get
            {
                if ((_MeasureSession == null))
                {
                    _MeasureSession = base.CreateObjectSet<MeasureSession>("MeasureSession");
                }
                return _MeasureSession;
            }
        }
        private ObjectSet<MeasureSession> _MeasureSession;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MeasureStation> MeasureStation
        {
            get
            {
                if ((_MeasureStation == null))
                {
                    _MeasureStation = base.CreateObjectSet<MeasureStation>("MeasureStation");
                }
                return _MeasureStation;
            }
        }
        private ObjectSet<MeasureStation> _MeasureStation;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MeasureValue> MeasureValue
        {
            get
            {
                if ((_MeasureValue == null))
                {
                    _MeasureValue = base.CreateObjectSet<MeasureValue>("MeasureValue");
                }
                return _MeasureValue;
            }
        }
        private ObjectSet<MeasureValue> _MeasureValue;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StationDeviceM2M> StationDeviceM2M
        {
            get
            {
                if ((_StationDeviceM2M == null))
                {
                    _StationDeviceM2M = base.CreateObjectSet<StationDeviceM2M>("StationDeviceM2M");
                }
                return _StationDeviceM2M;
            }
        }
        private ObjectSet<StationDeviceM2M> _StationDeviceM2M;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Unit> Unit
        {
            get
            {
                if ((_Unit == null))
                {
                    _Unit = base.CreateObjectSet<Unit>("Unit");
                }
                return _Unit;
            }
        }
        private ObjectSet<Unit> _Unit;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> User
        {
            get
            {
                if ((_User == null))
                {
                    _User = base.CreateObjectSet<User>("User");
                }
                return _User;
            }
        }
        private ObjectSet<User> _User;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserRight> UserRight
        {
            get
            {
                if ((_UserRight == null))
                {
                    _UserRight = base.CreateObjectSet<UserRight>("UserRight");
                }
                return _UserRight;
            }
        }
        private ObjectSet<UserRight> _UserRight;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserStationM2M> UserStationM2M
        {
            get
            {
                if ((_UserStationM2M == null))
                {
                    _UserStationM2M = base.CreateObjectSet<UserStationM2M>("UserStationM2M");
                }
                return _UserStationM2M;
            }
        }
        private ObjectSet<UserStationM2M> _UserStationM2M;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Right> Right
        {
            get
            {
                if ((_Right == null))
                {
                    _Right = base.CreateObjectSet<Right>("Right");
                }
                return _Right;
            }
        }
        private ObjectSet<Right> _Right;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CmdArchetype EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCmdArchetype(CmdArchetype cmdArchetype)
        {
            base.AddObject("CmdArchetype", cmdArchetype);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CmdList EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCmdList(CmdList cmdList)
        {
            base.AddObject("CmdList", cmdList);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Command EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCommand(Command command)
        {
            base.AddObject("Command", command);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ConfDevice EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToConfDevice(ConfDevice confDevice)
        {
            base.AddObject("ConfDevice", confDevice);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Device EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDevice(Device device)
        {
            base.AddObject("Device", device);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MeasureCycle EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMeasureCycle(MeasureCycle measureCycle)
        {
            base.AddObject("MeasureCycle", measureCycle);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Measurement EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMeasurement(Measurement measurement)
        {
            base.AddObject("Measurement", measurement);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MeasureSession EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMeasureSession(MeasureSession measureSession)
        {
            base.AddObject("MeasureSession", measureSession);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MeasureStation EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMeasureStation(MeasureStation measureStation)
        {
            base.AddObject("MeasureStation", measureStation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MeasureValue EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMeasureValue(MeasureValue measureValue)
        {
            base.AddObject("MeasureValue", measureValue);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StationDeviceM2M EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStationDeviceM2M(StationDeviceM2M stationDeviceM2M)
        {
            base.AddObject("StationDeviceM2M", stationDeviceM2M);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Unit EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUnit(Unit unit)
        {
            base.AddObject("Unit", unit);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the User EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUser(User user)
        {
            base.AddObject("User", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserRight EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserRight(UserRight userRight)
        {
            base.AddObject("UserRight", userRight);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserStationM2M EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserStationM2M(UserStationM2M userStationM2M)
        {
            base.AddObject("UserStationM2M", userStationM2M);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Right EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRight(Right right)
        {
            base.AddObject("Right", right);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UsbCdcDbModel", Name="CmdArchetype")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CmdArchetype : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CmdArchetype object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="deviceId">Initial value of the DeviceId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="returnByte">Initial value of the ReturnByte property.</param>
        public static CmdArchetype CreateCmdArchetype(global::System.Int32 id, global::System.Int32 deviceId, global::System.String name, global::System.Int32 returnByte)
        {
            CmdArchetype cmdArchetype = new CmdArchetype();
            cmdArchetype.Id = id;
            cmdArchetype.DeviceId = deviceId;
            cmdArchetype.Name = name;
            cmdArchetype.ReturnByte = returnByte;
            return cmdArchetype;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DeviceId
        {
            get
            {
                return _DeviceId;
            }
            set
            {
                OnDeviceIdChanging(value);
                ReportPropertyChanging("DeviceId");
                _DeviceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeviceId");
                OnDeviceIdChanged();
            }
        }
        private global::System.Int32 _DeviceId;
        partial void OnDeviceIdChanging(global::System.Int32 value);
        partial void OnDeviceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CommandValue
        {
            get
            {
                return _CommandValue;
            }
            set
            {
                OnCommandValueChanging(value);
                ReportPropertyChanging("CommandValue");
                _CommandValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CommandValue");
                OnCommandValueChanged();
            }
        }
        private Nullable<global::System.Int32> _CommandValue;
        partial void OnCommandValueChanging(Nullable<global::System.Int32> value);
        partial void OnCommandValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Index
        {
            get
            {
                return _Index;
            }
            set
            {
                OnIndexChanging(value);
                ReportPropertyChanging("Index");
                _Index = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Index");
                OnIndexChanged();
            }
        }
        private Nullable<global::System.Int32> _Index;
        partial void OnIndexChanging(Nullable<global::System.Int32> value);
        partial void OnIndexChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private Nullable<global::System.Int32> _Value;
        partial void OnValueChanging(Nullable<global::System.Int32> value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> LowRangeUnit
        {
            get
            {
                return _LowRangeUnit;
            }
            set
            {
                OnLowRangeUnitChanging(value);
                ReportPropertyChanging("LowRangeUnit");
                _LowRangeUnit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LowRangeUnit");
                OnLowRangeUnitChanged();
            }
        }
        private Nullable<global::System.Decimal> _LowRangeUnit;
        partial void OnLowRangeUnitChanging(Nullable<global::System.Decimal> value);
        partial void OnLowRangeUnitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> HighRangeUnit
        {
            get
            {
                return _HighRangeUnit;
            }
            set
            {
                OnHighRangeUnitChanging(value);
                ReportPropertyChanging("HighRangeUnit");
                _HighRangeUnit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HighRangeUnit");
                OnHighRangeUnitChanged();
            }
        }
        private Nullable<global::System.Decimal> _HighRangeUnit;
        partial void OnHighRangeUnitChanging(Nullable<global::System.Decimal> value);
        partial void OnHighRangeUnitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> LowRangeDev
        {
            get
            {
                return _LowRangeDev;
            }
            set
            {
                OnLowRangeDevChanging(value);
                ReportPropertyChanging("LowRangeDev");
                _LowRangeDev = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LowRangeDev");
                OnLowRangeDevChanged();
            }
        }
        private Nullable<global::System.Decimal> _LowRangeDev;
        partial void OnLowRangeDevChanging(Nullable<global::System.Decimal> value);
        partial void OnLowRangeDevChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> HighRangeDev
        {
            get
            {
                return _HighRangeDev;
            }
            set
            {
                OnHighRangeDevChanging(value);
                ReportPropertyChanging("HighRangeDev");
                _HighRangeDev = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HighRangeDev");
                OnHighRangeDevChanged();
            }
        }
        private Nullable<global::System.Decimal> _HighRangeDev;
        partial void OnHighRangeDevChanging(Nullable<global::System.Decimal> value);
        partial void OnHighRangeDevChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReturnByte
        {
            get
            {
                return _ReturnByte;
            }
            set
            {
                OnReturnByteChanging(value);
                ReportPropertyChanging("ReturnByte");
                _ReturnByte = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReturnByte");
                OnReturnByteChanged();
            }
        }
        private global::System.Int32 _ReturnByte;
        partial void OnReturnByteChanging(global::System.Int32 value);
        partial void OnReturnByteChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsbCdcDbModel", "FK_CmdArchetype_Device", "Device")]
        public Device Device
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Device>("UsbCdcDbModel.FK_CmdArchetype_Device", "Device").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Device>("UsbCdcDbModel.FK_CmdArchetype_Device", "Device").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Device> DeviceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Device>("UsbCdcDbModel.FK_CmdArchetype_Device", "Device");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Device>("UsbCdcDbModel.FK_CmdArchetype_Device", "Device", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsbCdcDbModel", "FK_Command_CmdArchetype", "Command")]
        public EntityCollection<Command> Command
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Command>("UsbCdcDbModel.FK_Command_CmdArchetype", "Command");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Command>("UsbCdcDbModel.FK_Command_CmdArchetype", "Command", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UsbCdcDbModel", Name="CmdList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CmdList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CmdList object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="deviceId">Initial value of the DeviceId property.</param>
        /// <param name="numberInOrder">Initial value of the NumberInOrder property.</param>
        public static CmdList CreateCmdList(global::System.Int32 id, global::System.Int32 deviceId, global::System.Int32 numberInOrder)
        {
            CmdList cmdList = new CmdList();
            cmdList.Id = id;
            cmdList.DeviceId = deviceId;
            cmdList.NumberInOrder = numberInOrder;
            return cmdList;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DeviceId
        {
            get
            {
                return _DeviceId;
            }
            set
            {
                OnDeviceIdChanging(value);
                ReportPropertyChanging("DeviceId");
                _DeviceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeviceId");
                OnDeviceIdChanged();
            }
        }
        private global::System.Int32 _DeviceId;
        partial void OnDeviceIdChanging(global::System.Int32 value);
        partial void OnDeviceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PostDelay
        {
            get
            {
                return _PostDelay;
            }
            set
            {
                OnPostDelayChanging(value);
                ReportPropertyChanging("PostDelay");
                _PostDelay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostDelay");
                OnPostDelayChanged();
            }
        }
        private Nullable<global::System.Int32> _PostDelay;
        partial void OnPostDelayChanging(Nullable<global::System.Int32> value);
        partial void OnPostDelayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberInOrder
        {
            get
            {
                return _NumberInOrder;
            }
            set
            {
                OnNumberInOrderChanging(value);
                ReportPropertyChanging("NumberInOrder");
                _NumberInOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberInOrder");
                OnNumberInOrderChanged();
            }
        }
        private global::System.Int32 _NumberInOrder;
        partial void OnNumberInOrderChanging(global::System.Int32 value);
        partial void OnNumberInOrderChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsbCdcDbModel", "FK_CmdList_ConfDevice", "ConfDevice")]
        public ConfDevice ConfDevice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ConfDevice>("UsbCdcDbModel.FK_CmdList_ConfDevice", "ConfDevice").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ConfDevice>("UsbCdcDbModel.FK_CmdList_ConfDevice", "ConfDevice").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ConfDevice> ConfDeviceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ConfDevice>("UsbCdcDbModel.FK_CmdList_ConfDevice", "ConfDevice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ConfDevice>("UsbCdcDbModel.FK_CmdList_ConfDevice", "ConfDevice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsbCdcDbModel", "FK_Command_CmdList", "Command")]
        public EntityCollection<Command> Command
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Command>("UsbCdcDbModel.FK_Command_CmdList", "Command");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Command>("UsbCdcDbModel.FK_Command_CmdList", "Command", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UsbCdcDbModel", Name="Command")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Command : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Command object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="cmdListId">Initial value of the CmdListId property.</param>
        /// <param name="archetypeId">Initial value of the ArchetypeId property.</param>
        /// <param name="unitId">Initial value of the UnitId property.</param>
        /// <param name="commandValue">Initial value of the CommandValue property.</param>
        /// <param name="returnByte">Initial value of the ReturnByte property.</param>
        /// <param name="noInOrder">Initial value of the NoInOrder property.</param>
        public static Command CreateCommand(global::System.Int32 id, global::System.Int32 cmdListId, global::System.Int32 archetypeId, global::System.Int32 unitId, global::System.Int32 commandValue, global::System.Int32 returnByte, global::System.Int32 noInOrder)
        {
            Command command = new Command();
            command.Id = id;
            command.CmdListId = cmdListId;
            command.ArchetypeId = archetypeId;
            command.UnitId = unitId;
            command.CommandValue = commandValue;
            command.ReturnByte = returnByte;
            command.NoInOrder = noInOrder;
            return command;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CmdListId
        {
            get
            {
                return _CmdListId;
            }
            set
            {
                OnCmdListIdChanging(value);
                ReportPropertyChanging("CmdListId");
                _CmdListId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CmdListId");
                OnCmdListIdChanged();
            }
        }
        private global::System.Int32 _CmdListId;
        partial void OnCmdListIdChanging(global::System.Int32 value);
        partial void OnCmdListIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ArchetypeId
        {
            get
            {
                return _ArchetypeId;
            }
            set
            {
                OnArchetypeIdChanging(value);
                ReportPropertyChanging("ArchetypeId");
                _ArchetypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ArchetypeId");
                OnArchetypeIdChanged();
            }
        }
        private global::System.Int32 _ArchetypeId;
        partial void OnArchetypeIdChanging(global::System.Int32 value);
        partial void OnArchetypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UnitId
        {
            get
            {
                return _UnitId;
            }
            set
            {
                OnUnitIdChanging(value);
                ReportPropertyChanging("UnitId");
                _UnitId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnitId");
                OnUnitIdChanged();
            }
        }
        private global::System.Int32 _UnitId;
        partial void OnUnitIdChanging(global::System.Int32 value);
        partial void OnUnitIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CommandValue
        {
            get
            {
                return _CommandValue;
            }
            set
            {
                OnCommandValueChanging(value);
                ReportPropertyChanging("CommandValue");
                _CommandValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CommandValue");
                OnCommandValueChanged();
            }
        }
        private global::System.Int32 _CommandValue;
        partial void OnCommandValueChanging(global::System.Int32 value);
        partial void OnCommandValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Index
        {
            get
            {
                return _Index;
            }
            set
            {
                OnIndexChanging(value);
                ReportPropertyChanging("Index");
                _Index = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Index");
                OnIndexChanged();
            }
        }
        private Nullable<global::System.Int32> _Index;
        partial void OnIndexChanging(Nullable<global::System.Int32> value);
        partial void OnIndexChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private Nullable<global::System.Int32> _Value;
        partial void OnValueChanging(Nullable<global::System.Int32> value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PostDelay
        {
            get
            {
                return _PostDelay;
            }
            set
            {
                OnPostDelayChanging(value);
                ReportPropertyChanging("PostDelay");
                _PostDelay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostDelay");
                OnPostDelayChanged();
            }
        }
        private Nullable<global::System.Int32> _PostDelay;
        partial void OnPostDelayChanging(Nullable<global::System.Int32> value);
        partial void OnPostDelayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> LowRangeUnit
        {
            get
            {
                return _LowRangeUnit;
            }
            set
            {
                OnLowRangeUnitChanging(value);
                ReportPropertyChanging("LowRangeUnit");
                _LowRangeUnit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LowRangeUnit");
                OnLowRangeUnitChanged();
            }
        }
        private Nullable<global::System.Decimal> _LowRangeUnit;
        partial void OnLowRangeUnitChanging(Nullable<global::System.Decimal> value);
        partial void OnLowRangeUnitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> HighRagneUnit
        {
            get
            {
                return _HighRagneUnit;
            }
            set
            {
                OnHighRagneUnitChanging(value);
                ReportPropertyChanging("HighRagneUnit");
                _HighRagneUnit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HighRagneUnit");
                OnHighRagneUnitChanged();
            }
        }
        private Nullable<global::System.Decimal> _HighRagneUnit;
        partial void OnHighRagneUnitChanging(Nullable<global::System.Decimal> value);
        partial void OnHighRagneUnitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> LowRangeDev
        {
            get
            {
                return _LowRangeDev;
            }
            set
            {
                OnLowRangeDevChanging(value);
                ReportPropertyChanging("LowRangeDev");
                _LowRangeDev = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LowRangeDev");
                OnLowRangeDevChanged();
            }
        }
        private Nullable<global::System.Decimal> _LowRangeDev;
        partial void OnLowRangeDevChanging(Nullable<global::System.Decimal> value);
        partial void OnLowRangeDevChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> HighRangeDev
        {
            get
            {
                return _HighRangeDev;
            }
            set
            {
                OnHighRangeDevChanging(value);
                ReportPropertyChanging("HighRangeDev");
                _HighRangeDev = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HighRangeDev");
                OnHighRangeDevChanged();
            }
        }
        private Nullable<global::System.Decimal> _HighRangeDev;
        partial void OnHighRangeDevChanging(Nullable<global::System.Decimal> value);
        partial void OnHighRangeDevChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReturnByte
        {
            get
            {
                return _ReturnByte;
            }
            set
            {
                OnReturnByteChanging(value);
                ReportPropertyChanging("ReturnByte");
                _ReturnByte = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReturnByte");
                OnReturnByteChanged();
            }
        }
        private global::System.Int32 _ReturnByte;
        partial void OnReturnByteChanging(global::System.Int32 value);
        partial void OnReturnByteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NoInOrder
        {
            get
            {
                return _NoInOrder;
            }
            set
            {
                OnNoInOrderChanging(value);
                ReportPropertyChanging("NoInOrder");
                _NoInOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NoInOrder");
                OnNoInOrderChanged();
            }
        }
        private global::System.Int32 _NoInOrder;
        partial void OnNoInOrderChanging(global::System.Int32 value);
        partial void OnNoInOrderChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsbCdcDbModel", "FK_Command_CmdArchetype", "CmdArchetype")]
        public CmdArchetype CmdArchetype
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CmdArchetype>("UsbCdcDbModel.FK_Command_CmdArchetype", "CmdArchetype").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CmdArchetype>("UsbCdcDbModel.FK_Command_CmdArchetype", "CmdArchetype").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CmdArchetype> CmdArchetypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CmdArchetype>("UsbCdcDbModel.FK_Command_CmdArchetype", "CmdArchetype");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CmdArchetype>("UsbCdcDbModel.FK_Command_CmdArchetype", "CmdArchetype", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsbCdcDbModel", "FK_Command_CmdList", "CmdList")]
        public CmdList CmdList
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CmdList>("UsbCdcDbModel.FK_Command_CmdList", "CmdList").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CmdList>("UsbCdcDbModel.FK_Command_CmdList", "CmdList").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CmdList> CmdListReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CmdList>("UsbCdcDbModel.FK_Command_CmdList", "CmdList");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CmdList>("UsbCdcDbModel.FK_Command_CmdList", "CmdList", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsbCdcDbModel", "FK_Command_Unit", "Unit")]
        public Unit Unit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Unit>("UsbCdcDbModel.FK_Command_Unit", "Unit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Unit>("UsbCdcDbModel.FK_Command_Unit", "Unit").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Unit> UnitReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Unit>("UsbCdcDbModel.FK_Command_Unit", "Unit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Unit>("UsbCdcDbModel.FK_Command_Unit", "Unit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsbCdcDbModel", "FK_MeasureValue_Command", "MeasureValue")]
        public EntityCollection<MeasureValue> MeasureValue
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MeasureValue>("UsbCdcDbModel.FK_MeasureValue_Command", "MeasureValue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MeasureValue>("UsbCdcDbModel.FK_MeasureValue_Command", "MeasureValue", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UsbCdcDbModel", Name="ConfDevice")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ConfDevice : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ConfDevice object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="deviceId">Initial value of the DeviceId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static ConfDevice CreateConfDevice(global::System.Int32 id, global::System.Int32 deviceId, global::System.String name, global::System.Boolean isActive)
        {
            ConfDevice confDevice = new ConfDevice();
            confDevice.Id = id;
            confDevice.DeviceId = deviceId;
            confDevice.Name = name;
            confDevice.IsActive = isActive;
            return confDevice;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DeviceId
        {
            get
            {
                return _DeviceId;
            }
            set
            {
                OnDeviceIdChanging(value);
                ReportPropertyChanging("DeviceId");
                _DeviceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeviceId");
                OnDeviceIdChanged();
            }
        }
        private global::System.Int32 _DeviceId;
        partial void OnDeviceIdChanging(global::System.Int32 value);
        partial void OnDeviceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Decsription
        {
            get
            {
                return _Decsription;
            }
            set
            {
                OnDecsriptionChanging(value);
                ReportPropertyChanging("Decsription");
                _Decsription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Decsription");
                OnDecsriptionChanged();
            }
        }
        private global::System.String _Decsription;
        partial void OnDecsriptionChanging(global::System.String value);
        partial void OnDecsriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsbCdcDbModel", "FK_CmdList_ConfDevice", "CmdList")]
        public EntityCollection<CmdList> CmdList
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CmdList>("UsbCdcDbModel.FK_CmdList_ConfDevice", "CmdList");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CmdList>("UsbCdcDbModel.FK_CmdList_ConfDevice", "CmdList", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsbCdcDbModel", "FK_ConfDevice_Device", "Device")]
        public Device Device
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Device>("UsbCdcDbModel.FK_ConfDevice_Device", "Device").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Device>("UsbCdcDbModel.FK_ConfDevice_Device", "Device").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Device> DeviceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Device>("UsbCdcDbModel.FK_ConfDevice_Device", "Device");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Device>("UsbCdcDbModel.FK_ConfDevice_Device", "Device", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsbCdcDbModel", "FK_MeasureSession_ConfDevice", "MeasureSession")]
        public EntityCollection<MeasureSession> MeasureSession
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MeasureSession>("UsbCdcDbModel.FK_MeasureSession_ConfDevice", "MeasureSession");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MeasureSession>("UsbCdcDbModel.FK_MeasureSession_ConfDevice", "MeasureSession", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UsbCdcDbModel", Name="Device")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Device : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Device object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="interface">Initial value of the Interface property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static Device CreateDevice(global::System.Int32 id, global::System.String name, global::System.Int32 @interface, global::System.Boolean isActive)
        {
            Device device = new Device();
            device.Id = id;
            device.Name = name;
            device.Interface = @interface;
            device.IsActive = isActive;
            return device;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Interface
        {
            get
            {
                return _Interface;
            }
            set
            {
                OnInterfaceChanging(value);
                ReportPropertyChanging("Interface");
                _Interface = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Interface");
                OnInterfaceChanged();
            }
        }
        private global::System.Int32 _Interface;
        partial void OnInterfaceChanging(global::System.Int32 value);
        partial void OnInterfaceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VID
        {
            get
            {
                return _VID;
            }
            set
            {
                OnVIDChanging(value);
                ReportPropertyChanging("VID");
                _VID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VID");
                OnVIDChanged();
            }
        }
        private global::System.String _VID;
        partial void OnVIDChanging(global::System.String value);
        partial void OnVIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PID
        {
            get
            {
                return _PID;
            }
            set
            {
                OnPIDChanging(value);
                ReportPropertyChanging("PID");
                _PID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PID");
                OnPIDChanged();
            }
        }
        private global::System.String _PID;
        partial void OnPIDChanging(global::System.String value);
        partial void OnPIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsbCdcDbModel", "FK_CmdArchetype_Device", "CmdArchetype")]
        public EntityCollection<CmdArchetype> CmdArchetype
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CmdArchetype>("UsbCdcDbModel.FK_CmdArchetype_Device", "CmdArchetype");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CmdArchetype>("UsbCdcDbModel.FK_CmdArchetype_Device", "CmdArchetype", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsbCdcDbModel", "FK_ConfDevice_Device", "ConfDevice")]
        public EntityCollection<ConfDevice> ConfDevice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ConfDevice>("UsbCdcDbModel.FK_ConfDevice_Device", "ConfDevice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ConfDevice>("UsbCdcDbModel.FK_ConfDevice_Device", "ConfDevice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsbCdcDbModel", "FK_StationDeviceM2M_Device", "StationDeviceM2M")]
        public EntityCollection<StationDeviceM2M> StationDeviceM2M
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StationDeviceM2M>("UsbCdcDbModel.FK_StationDeviceM2M_Device", "StationDeviceM2M");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StationDeviceM2M>("UsbCdcDbModel.FK_StationDeviceM2M_Device", "StationDeviceM2M", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UsbCdcDbModel", Name="MeasureCycle")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MeasureCycle : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MeasureCycle object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="sessionId">Initial value of the SessionId property.</param>
        /// <param name="start">Initial value of the Start property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        public static MeasureCycle CreateMeasureCycle(global::System.Int32 id, global::System.Int32 sessionId, global::System.DateTime start, global::System.Int16 type)
        {
            MeasureCycle measureCycle = new MeasureCycle();
            measureCycle.Id = id;
            measureCycle.SessionId = sessionId;
            measureCycle.Start = start;
            measureCycle.Type = type;
            return measureCycle;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SessionId
        {
            get
            {
                return _SessionId;
            }
            set
            {
                OnSessionIdChanging(value);
                ReportPropertyChanging("SessionId");
                _SessionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SessionId");
                OnSessionIdChanged();
            }
        }
        private global::System.Int32 _SessionId;
        partial void OnSessionIdChanging(global::System.Int32 value);
        partial void OnSessionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Start
        {
            get
            {
                return _Start;
            }
            set
            {
                OnStartChanging(value);
                ReportPropertyChanging("Start");
                _Start = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Start");
                OnStartChanged();
            }
        }
        private global::System.DateTime _Start;
        partial void OnStartChanging(global::System.DateTime value);
        partial void OnStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Stop
        {
            get
            {
                return _Stop;
            }
            set
            {
                OnStopChanging(value);
                ReportPropertyChanging("Stop");
                _Stop = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Stop");
                OnStopChanged();
            }
        }
        private Nullable<global::System.DateTime> _Stop;
        partial void OnStopChanging(Nullable<global::System.DateTime> value);
        partial void OnStopChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.Int16 _Type;
        partial void OnTypeChanging(global::System.Int16 value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Error
        {
            get
            {
                return _Error;
            }
            set
            {
                OnErrorChanging(value);
                ReportPropertyChanging("Error");
                _Error = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Error");
                OnErrorChanged();
            }
        }
        private Nullable<global::System.Int32> _Error;
        partial void OnErrorChanging(Nullable<global::System.Int32> value);
        partial void OnErrorChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsbCdcDbModel", "FK_MeasureCycle_MeasureSession", "MeasureSession")]
        public MeasureSession MeasureSession
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MeasureSession>("UsbCdcDbModel.FK_MeasureCycle_MeasureSession", "MeasureSession").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MeasureSession>("UsbCdcDbModel.FK_MeasureCycle_MeasureSession", "MeasureSession").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MeasureSession> MeasureSessionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MeasureSession>("UsbCdcDbModel.FK_MeasureCycle_MeasureSession", "MeasureSession");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MeasureSession>("UsbCdcDbModel.FK_MeasureCycle_MeasureSession", "MeasureSession", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsbCdcDbModel", "FK_Measurement_MeasureCycle", "Measurement")]
        public EntityCollection<Measurement> Measurement
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Measurement>("UsbCdcDbModel.FK_Measurement_MeasureCycle", "Measurement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Measurement>("UsbCdcDbModel.FK_Measurement_MeasureCycle", "Measurement", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UsbCdcDbModel", Name="Measurement")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Measurement : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Measurement object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="cycleId">Initial value of the CycleId property.</param>
        /// <param name="time">Initial value of the Time property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        public static Measurement CreateMeasurement(global::System.Decimal id, global::System.Int32 cycleId, global::System.DateTime time, global::System.Int16 type)
        {
            Measurement measurement = new Measurement();
            measurement.Id = id;
            measurement.CycleId = cycleId;
            measurement.Time = time;
            measurement.Type = type;
            return measurement;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Decimal _Id;
        partial void OnIdChanging(global::System.Decimal value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CycleId
        {
            get
            {
                return _CycleId;
            }
            set
            {
                OnCycleIdChanging(value);
                ReportPropertyChanging("CycleId");
                _CycleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CycleId");
                OnCycleIdChanged();
            }
        }
        private global::System.Int32 _CycleId;
        partial void OnCycleIdChanging(global::System.Int32 value);
        partial void OnCycleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Time
        {
            get
            {
                return _Time;
            }
            set
            {
                OnTimeChanging(value);
                ReportPropertyChanging("Time");
                _Time = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Time");
                OnTimeChanged();
            }
        }
        private global::System.DateTime _Time;
        partial void OnTimeChanging(global::System.DateTime value);
        partial void OnTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.Int16 _Type;
        partial void OnTypeChanging(global::System.Int16 value);
        partial void OnTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsbCdcDbModel", "FK_Measurement_MeasureCycle", "MeasureCycle")]
        public MeasureCycle MeasureCycle
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MeasureCycle>("UsbCdcDbModel.FK_Measurement_MeasureCycle", "MeasureCycle").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MeasureCycle>("UsbCdcDbModel.FK_Measurement_MeasureCycle", "MeasureCycle").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MeasureCycle> MeasureCycleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MeasureCycle>("UsbCdcDbModel.FK_Measurement_MeasureCycle", "MeasureCycle");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MeasureCycle>("UsbCdcDbModel.FK_Measurement_MeasureCycle", "MeasureCycle", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsbCdcDbModel", "FK_MeasureValue_Measurement", "MeasureValue")]
        public EntityCollection<MeasureValue> MeasureValue
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MeasureValue>("UsbCdcDbModel.FK_MeasureValue_Measurement", "MeasureValue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MeasureValue>("UsbCdcDbModel.FK_MeasureValue_Measurement", "MeasureValue", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UsbCdcDbModel", Name="MeasureSession")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MeasureSession : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MeasureSession object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        public static MeasureSession CreateMeasureSession(global::System.Int32 id, global::System.DateTime startDate, global::System.Int16 type)
        {
            MeasureSession measureSession = new MeasureSession();
            measureSession.Id = id;
            measureSession.StartDate = startDate;
            measureSession.Type = type;
            return measureSession;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StationId
        {
            get
            {
                return _StationId;
            }
            set
            {
                OnStationIdChanging(value);
                ReportPropertyChanging("StationId");
                _StationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StationId");
                OnStationIdChanged();
            }
        }
        private Nullable<global::System.Int32> _StationId;
        partial void OnStationIdChanging(Nullable<global::System.Int32> value);
        partial void OnStationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ConfId
        {
            get
            {
                return _ConfId;
            }
            set
            {
                OnConfIdChanging(value);
                ReportPropertyChanging("ConfId");
                _ConfId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ConfId");
                OnConfIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ConfId;
        partial void OnConfIdChanging(Nullable<global::System.Int32> value);
        partial void OnConfIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StopDate
        {
            get
            {
                return _StopDate;
            }
            set
            {
                OnStopDateChanging(value);
                ReportPropertyChanging("StopDate");
                _StopDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StopDate");
                OnStopDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StopDate;
        partial void OnStopDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStopDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.Int16 _Type;
        partial void OnTypeChanging(global::System.Int16 value);
        partial void OnTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsbCdcDbModel", "FK_MeasureSession_ConfDevice", "ConfDevice")]
        public ConfDevice ConfDevice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ConfDevice>("UsbCdcDbModel.FK_MeasureSession_ConfDevice", "ConfDevice").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ConfDevice>("UsbCdcDbModel.FK_MeasureSession_ConfDevice", "ConfDevice").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ConfDevice> ConfDeviceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ConfDevice>("UsbCdcDbModel.FK_MeasureSession_ConfDevice", "ConfDevice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ConfDevice>("UsbCdcDbModel.FK_MeasureSession_ConfDevice", "ConfDevice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsbCdcDbModel", "FK_MeasureCycle_MeasureSession", "MeasureCycle")]
        public EntityCollection<MeasureCycle> MeasureCycle
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MeasureCycle>("UsbCdcDbModel.FK_MeasureCycle_MeasureSession", "MeasureCycle");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MeasureCycle>("UsbCdcDbModel.FK_MeasureCycle_MeasureSession", "MeasureCycle", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsbCdcDbModel", "FK_MeasureSession_MeasureStation", "MeasureStation")]
        public MeasureStation MeasureStation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MeasureStation>("UsbCdcDbModel.FK_MeasureSession_MeasureStation", "MeasureStation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MeasureStation>("UsbCdcDbModel.FK_MeasureSession_MeasureStation", "MeasureStation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MeasureStation> MeasureStationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MeasureStation>("UsbCdcDbModel.FK_MeasureSession_MeasureStation", "MeasureStation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MeasureStation>("UsbCdcDbModel.FK_MeasureSession_MeasureStation", "MeasureStation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsbCdcDbModel", "FK_MeasureSession_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UsbCdcDbModel.FK_MeasureSession_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UsbCdcDbModel.FK_MeasureSession_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UsbCdcDbModel.FK_MeasureSession_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("UsbCdcDbModel.FK_MeasureSession_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UsbCdcDbModel", Name="MeasureStation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MeasureStation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MeasureStation object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static MeasureStation CreateMeasureStation(global::System.Int32 id, global::System.String name, global::System.Boolean isActive)
        {
            MeasureStation measureStation = new MeasureStation();
            measureStation.Id = id;
            measureStation.Name = name;
            measureStation.IsActive = isActive;
            return measureStation;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsbCdcDbModel", "FK_MeasureSession_MeasureStation", "MeasureSession")]
        public EntityCollection<MeasureSession> MeasureSession
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MeasureSession>("UsbCdcDbModel.FK_MeasureSession_MeasureStation", "MeasureSession");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MeasureSession>("UsbCdcDbModel.FK_MeasureSession_MeasureStation", "MeasureSession", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsbCdcDbModel", "FK_StationDeviceM2M_MeasureStation", "StationDeviceM2M")]
        public EntityCollection<StationDeviceM2M> StationDeviceM2M
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StationDeviceM2M>("UsbCdcDbModel.FK_StationDeviceM2M_MeasureStation", "StationDeviceM2M");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StationDeviceM2M>("UsbCdcDbModel.FK_StationDeviceM2M_MeasureStation", "StationDeviceM2M", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsbCdcDbModel", "FK_UserStationM2M_MeasureStation", "UserStationM2M")]
        public EntityCollection<UserStationM2M> UserStationM2M
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserStationM2M>("UsbCdcDbModel.FK_UserStationM2M_MeasureStation", "UserStationM2M");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserStationM2M>("UsbCdcDbModel.FK_UserStationM2M_MeasureStation", "UserStationM2M", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UsbCdcDbModel", Name="MeasureValue")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MeasureValue : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MeasureValue object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="measurementId">Initial value of the MeasurementId property.</param>
        /// <param name="commandId">Initial value of the CommandId property.</param>
        public static MeasureValue CreateMeasureValue(global::System.Decimal id, global::System.Decimal measurementId, global::System.Int32 commandId)
        {
            MeasureValue measureValue = new MeasureValue();
            measureValue.Id = id;
            measureValue.MeasurementId = measurementId;
            measureValue.CommandId = commandId;
            return measureValue;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Decimal _Id;
        partial void OnIdChanging(global::System.Decimal value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal MeasurementId
        {
            get
            {
                return _MeasurementId;
            }
            set
            {
                OnMeasurementIdChanging(value);
                ReportPropertyChanging("MeasurementId");
                _MeasurementId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MeasurementId");
                OnMeasurementIdChanged();
            }
        }
        private global::System.Decimal _MeasurementId;
        partial void OnMeasurementIdChanging(global::System.Decimal value);
        partial void OnMeasurementIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CommandId
        {
            get
            {
                return _CommandId;
            }
            set
            {
                OnCommandIdChanging(value);
                ReportPropertyChanging("CommandId");
                _CommandId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CommandId");
                OnCommandIdChanged();
            }
        }
        private global::System.Int32 _CommandId;
        partial void OnCommandIdChanging(global::System.Int32 value);
        partial void OnCommandIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> DevValue
        {
            get
            {
                return _DevValue;
            }
            set
            {
                OnDevValueChanging(value);
                ReportPropertyChanging("DevValue");
                _DevValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DevValue");
                OnDevValueChanged();
            }
        }
        private Nullable<global::System.Decimal> _DevValue;
        partial void OnDevValueChanging(Nullable<global::System.Decimal> value);
        partial void OnDevValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> UnitValue
        {
            get
            {
                return _UnitValue;
            }
            set
            {
                OnUnitValueChanging(value);
                ReportPropertyChanging("UnitValue");
                _UnitValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnitValue");
                OnUnitValueChanged();
            }
        }
        private Nullable<global::System.Decimal> _UnitValue;
        partial void OnUnitValueChanging(Nullable<global::System.Decimal> value);
        partial void OnUnitValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Time
        {
            get
            {
                return _Time;
            }
            set
            {
                OnTimeChanging(value);
                ReportPropertyChanging("Time");
                _Time = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Time");
                OnTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _Time;
        partial void OnTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Error
        {
            get
            {
                return _Error;
            }
            set
            {
                OnErrorChanging(value);
                ReportPropertyChanging("Error");
                _Error = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Error");
                OnErrorChanged();
            }
        }
        private Nullable<global::System.Int32> _Error;
        partial void OnErrorChanging(Nullable<global::System.Int32> value);
        partial void OnErrorChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsbCdcDbModel", "FK_MeasureValue_Command", "Command")]
        public Command Command
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Command>("UsbCdcDbModel.FK_MeasureValue_Command", "Command").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Command>("UsbCdcDbModel.FK_MeasureValue_Command", "Command").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Command> CommandReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Command>("UsbCdcDbModel.FK_MeasureValue_Command", "Command");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Command>("UsbCdcDbModel.FK_MeasureValue_Command", "Command", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsbCdcDbModel", "FK_MeasureValue_Measurement", "Measurement")]
        public Measurement Measurement
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Measurement>("UsbCdcDbModel.FK_MeasureValue_Measurement", "Measurement").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Measurement>("UsbCdcDbModel.FK_MeasureValue_Measurement", "Measurement").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Measurement> MeasurementReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Measurement>("UsbCdcDbModel.FK_MeasureValue_Measurement", "Measurement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Measurement>("UsbCdcDbModel.FK_MeasureValue_Measurement", "Measurement", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UsbCdcDbModel", Name="Right")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Right : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Right object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Right CreateRight(global::System.Int32 id, global::System.String name)
        {
            Right right = new Right();
            right.Id = id;
            right.Name = name;
            return right;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsbCdcDbModel", "FK_UserRight_Right", "UserRight")]
        public EntityCollection<UserRight> UserRight
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserRight>("UsbCdcDbModel.FK_UserRight_Right", "UserRight");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserRight>("UsbCdcDbModel.FK_UserRight_Right", "UserRight", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UsbCdcDbModel", Name="StationDeviceM2M")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StationDeviceM2M : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StationDeviceM2M object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="stationId">Initial value of the StationId property.</param>
        /// <param name="deviceId">Initial value of the DeviceId property.</param>
        public static StationDeviceM2M CreateStationDeviceM2M(global::System.Int32 id, global::System.Int32 stationId, global::System.Int32 deviceId)
        {
            StationDeviceM2M stationDeviceM2M = new StationDeviceM2M();
            stationDeviceM2M.Id = id;
            stationDeviceM2M.StationId = stationId;
            stationDeviceM2M.DeviceId = deviceId;
            return stationDeviceM2M;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StationId
        {
            get
            {
                return _StationId;
            }
            set
            {
                OnStationIdChanging(value);
                ReportPropertyChanging("StationId");
                _StationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StationId");
                OnStationIdChanged();
            }
        }
        private global::System.Int32 _StationId;
        partial void OnStationIdChanging(global::System.Int32 value);
        partial void OnStationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DeviceId
        {
            get
            {
                return _DeviceId;
            }
            set
            {
                OnDeviceIdChanging(value);
                ReportPropertyChanging("DeviceId");
                _DeviceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeviceId");
                OnDeviceIdChanged();
            }
        }
        private global::System.Int32 _DeviceId;
        partial void OnDeviceIdChanging(global::System.Int32 value);
        partial void OnDeviceIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsbCdcDbModel", "FK_StationDeviceM2M_Device", "Device")]
        public Device Device
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Device>("UsbCdcDbModel.FK_StationDeviceM2M_Device", "Device").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Device>("UsbCdcDbModel.FK_StationDeviceM2M_Device", "Device").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Device> DeviceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Device>("UsbCdcDbModel.FK_StationDeviceM2M_Device", "Device");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Device>("UsbCdcDbModel.FK_StationDeviceM2M_Device", "Device", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsbCdcDbModel", "FK_StationDeviceM2M_MeasureStation", "MeasureStation")]
        public MeasureStation MeasureStation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MeasureStation>("UsbCdcDbModel.FK_StationDeviceM2M_MeasureStation", "MeasureStation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MeasureStation>("UsbCdcDbModel.FK_StationDeviceM2M_MeasureStation", "MeasureStation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MeasureStation> MeasureStationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MeasureStation>("UsbCdcDbModel.FK_StationDeviceM2M_MeasureStation", "MeasureStation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MeasureStation>("UsbCdcDbModel.FK_StationDeviceM2M_MeasureStation", "MeasureStation", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UsbCdcDbModel", Name="Unit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Unit : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Unit object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="shortCut">Initial value of the ShortCut property.</param>
        public static Unit CreateUnit(global::System.Int32 id, global::System.String name, global::System.String shortCut)
        {
            Unit unit = new Unit();
            unit.Id = id;
            unit.Name = name;
            unit.ShortCut = shortCut;
            return unit;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ShortCut
        {
            get
            {
                return _ShortCut;
            }
            set
            {
                OnShortCutChanging(value);
                ReportPropertyChanging("ShortCut");
                _ShortCut = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ShortCut");
                OnShortCutChanged();
            }
        }
        private global::System.String _ShortCut;
        partial void OnShortCutChanging(global::System.String value);
        partial void OnShortCutChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsbCdcDbModel", "FK_Command_Unit", "Command")]
        public EntityCollection<Command> Command
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Command>("UsbCdcDbModel.FK_Command_Unit", "Command");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Command>("UsbCdcDbModel.FK_Command_Unit", "Command", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UsbCdcDbModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="login">Initial value of the Login property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="isLocked">Initial value of the IsLocked property.</param>
        public static User CreateUser(global::System.Int32 id, global::System.String login, global::System.String password, global::System.DateTime createDate, global::System.Boolean isLocked)
        {
            User user = new User();
            user.Id = id;
            user.Login = login;
            user.Password = password;
            user.CreateDate = createDate;
            user.IsLocked = isLocked;
            return user;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Login
        {
            get
            {
                return _Login;
            }
            set
            {
                OnLoginChanging(value);
                ReportPropertyChanging("Login");
                _Login = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Login");
                OnLoginChanged();
            }
        }
        private global::System.String _Login;
        partial void OnLoginChanging(global::System.String value);
        partial void OnLoginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsLocked
        {
            get
            {
                return _IsLocked;
            }
            set
            {
                OnIsLockedChanging(value);
                ReportPropertyChanging("IsLocked");
                _IsLocked = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsLocked");
                OnIsLockedChanged();
            }
        }
        private global::System.Boolean _IsLocked;
        partial void OnIsLockedChanging(global::System.Boolean value);
        partial void OnIsLockedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsbCdcDbModel", "FK_MeasureSession_User", "MeasureSession")]
        public EntityCollection<MeasureSession> MeasureSession
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MeasureSession>("UsbCdcDbModel.FK_MeasureSession_User", "MeasureSession");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MeasureSession>("UsbCdcDbModel.FK_MeasureSession_User", "MeasureSession", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsbCdcDbModel", "FK_UserRight_User", "UserRight")]
        public EntityCollection<UserRight> UserRight
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserRight>("UsbCdcDbModel.FK_UserRight_User", "UserRight");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserRight>("UsbCdcDbModel.FK_UserRight_User", "UserRight", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsbCdcDbModel", "FK_UserStationM2M_User", "UserStationM2M")]
        public EntityCollection<UserStationM2M> UserStationM2M
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserStationM2M>("UsbCdcDbModel.FK_UserStationM2M_User", "UserStationM2M");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserStationM2M>("UsbCdcDbModel.FK_UserStationM2M_User", "UserStationM2M", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UsbCdcDbModel", Name="UserRight")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserRight : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserRight object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="rightId">Initial value of the RightId property.</param>
        public static UserRight CreateUserRight(global::System.Int32 id, global::System.Int32 userId, global::System.Int32 rightId)
        {
            UserRight userRight = new UserRight();
            userRight.Id = id;
            userRight.UserId = userId;
            userRight.RightId = rightId;
            return userRight;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RightId
        {
            get
            {
                return _RightId;
            }
            set
            {
                OnRightIdChanging(value);
                ReportPropertyChanging("RightId");
                _RightId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RightId");
                OnRightIdChanged();
            }
        }
        private global::System.Int32 _RightId;
        partial void OnRightIdChanging(global::System.Int32 value);
        partial void OnRightIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsbCdcDbModel", "FK_UserRight_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UsbCdcDbModel.FK_UserRight_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UsbCdcDbModel.FK_UserRight_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UsbCdcDbModel.FK_UserRight_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("UsbCdcDbModel.FK_UserRight_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsbCdcDbModel", "FK_UserRight_Right", "Right")]
        public Right Right
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Right>("UsbCdcDbModel.FK_UserRight_Right", "Right").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Right>("UsbCdcDbModel.FK_UserRight_Right", "Right").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Right> RightReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Right>("UsbCdcDbModel.FK_UserRight_Right", "Right");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Right>("UsbCdcDbModel.FK_UserRight_Right", "Right", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="UsbCdcDbModel", Name="UserStationM2M")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserStationM2M : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserStationM2M object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="stationId">Initial value of the StationId property.</param>
        public static UserStationM2M CreateUserStationM2M(global::System.Int32 id, global::System.Int32 userId, global::System.Int32 stationId)
        {
            UserStationM2M userStationM2M = new UserStationM2M();
            userStationM2M.Id = id;
            userStationM2M.UserId = userId;
            userStationM2M.StationId = stationId;
            return userStationM2M;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StationId
        {
            get
            {
                return _StationId;
            }
            set
            {
                OnStationIdChanging(value);
                ReportPropertyChanging("StationId");
                _StationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StationId");
                OnStationIdChanged();
            }
        }
        private global::System.Int32 _StationId;
        partial void OnStationIdChanging(global::System.Int32 value);
        partial void OnStationIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsbCdcDbModel", "FK_UserStationM2M_MeasureStation", "MeasureStation")]
        public MeasureStation MeasureStation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MeasureStation>("UsbCdcDbModel.FK_UserStationM2M_MeasureStation", "MeasureStation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MeasureStation>("UsbCdcDbModel.FK_UserStationM2M_MeasureStation", "MeasureStation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MeasureStation> MeasureStationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MeasureStation>("UsbCdcDbModel.FK_UserStationM2M_MeasureStation", "MeasureStation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MeasureStation>("UsbCdcDbModel.FK_UserStationM2M_MeasureStation", "MeasureStation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("UsbCdcDbModel", "FK_UserStationM2M_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UsbCdcDbModel.FK_UserStationM2M_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UsbCdcDbModel.FK_UserStationM2M_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("UsbCdcDbModel.FK_UserStationM2M_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("UsbCdcDbModel.FK_UserStationM2M_User", "User", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
